*******************************************************Question*****************************************************************
1. Second Largest Element in an Array
Given an array of positive integers arr[] of size n, the task is to find second largest distinct element in the array.

Note: If the second largest element does not exist, return -1.

Examples:

Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.


Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.


Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 there is no second largest element.

using System;
using System.Linq;

public class Program
{
    public static int FindSecondLargest(int[] arr)
    {
        // Handle edge case: If the array has fewer than 2 distinct elements, return -1
        var distinctElements = arr.Distinct().ToArray();
        if (distinctElements.Length < 2)
        {
            return -1;
        }

        // Initialize the largest and second largest variables
        int largest = int.MinValue;
        int secondLargest = int.MinValue;

        // Traverse the array to find the largest and second largest distinct elements
        foreach (int num in distinctElements)
        {
            if (num > largest)
            {
                secondLargest = largest; // Update second largest
                largest = num; // Update largest
            }
            else if (num > secondLargest)
            {
                secondLargest = num; // Update second largest
            }
        }

        return secondLargest;
    }

    public static void Main()
    {
        // Test cases
        int[] arr1 = { 12, 35, 1, 10, 34, 1 };
        Console.WriteLine(FindSecondLargest(arr1)); // Output: 34

        int[] arr2 = { 10, 5, 10 };
        Console.WriteLine(FindSecondLargest(arr2)); // Output: 5

        int[] arr3 = { 10, 10, 10 };
        Console.WriteLine(FindSecondLargest(arr3)); // Output: -1
    }
}
*using System;
using System.Linq;

public class Program
{
    public static int FindSecondLargest(int[] arr)
    {
        // Handle edge case: If the array has fewer than 2 distinct elements, return -1
        var distinctElements = arr.Distinct().ToArray();
        if (distinctElements.Length < 2)
        {
            return -1;
        }

        // Initialize the largest and second largest variables
        int largest = int.MinValue;
        int secondLargest = int.MinValue;

        // Traverse the array to find the largest and second largest distinct elements
        foreach (int num in distinctElements)
        {
            if (num > largest)
            {
                secondLargest = largest; // Update second largest
                largest = num; // Update largest
            }
            else if (num > secondLargest)
            {
                secondLargest = num; // Update second largest
            }
        }

        return secondLargest;
    }

    public static void Main()
    {
        // Test cases
        int[] arr1 = { 12, 35, 1, 10, 34, 1 };
        Console.WriteLine(FindSecondLargest(arr1)); // Output: 34

        int[] arr2 = { 10, 5, 10 };
        Console.WriteLine(FindSecondLargest(arr2)); // Output: 5

        int[] arr3 = { 10, 10, 10 };
        Console.WriteLine(FindSecondLargest(arr3)); // Output: -1
    }
}
